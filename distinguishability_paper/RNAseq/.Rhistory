data<-c(x1,x2,x3,x4)
hclust_lkratio_opt(data)
hclust_lkratio_opt(data)
hclust_lkratio_opt(data)
hclust_lkratio_opt(data)
x1<-rnorm(100,-4,1)
x2<-rnorm(100,0,1)
x3<-rnorm(100,4,1)
x4<- rnorm(100,8,1)
data<-c(x1,x2,x3,x4)
hclust_lkratio_opt(data)
#dist_mat_scaled <- dist(scale(penguins))
#hc_average <- hclust(dist_mat_scaled, method = "average")
hclust_lkratio_opt(scale(penguins))
x1<-rnorm(100,-5,1)
x2<-rnorm(100,0,1)
x3<-rnorm(100,5,1)
#x4<- rnorm(100,8,1)
data<-c(x1,x2,x3)
hclust_lkratio_opt<-function(data,k_max=10){
#hetero = 0.2725229
hetero_list = c(0.2015669,0.2249782,0.2430164,0.2585681,0.2725229)
hetero_max = hetero_list[length(hetero_list)]
hclust_temp = hclust(dist(data),method="average")
res <- c(NA)
for (k in 2:k_max){
res_cluster = cutree(hclust_temp,k)
centers = sapply(1:k, function(x) mean(data[which(res_cluster==x)]))
centers = cbind(center=centers,hclust_order=1:k)
n_list = sapply(1:k, function(x) length(which(res_cluster==x)))
centers = cbind(centers,n_ind = n_list)
centers = centers[order(centers[,1]),]
centers = cbind(centers,cluster_order=1:k)
centers = data.frame(centers)
colnames(centers)[1] <- c("center")
phi2_max = rep(0,k)
var = rep(0,k)
loglkratio = 0
#loglk_agg = 0
for (i in 1:k){
hcluster_ind_order = centers$hclust_order[i]
if (i==1){
dist = (centers$center[i]-centers$center[i+1])^2
}
else
{if (i==k){
dist = (centers$center[i]-centers$center[i-1])^2
}
else{
dist = min((centers$center[i]-centers$center[i-1])^2,(centers$center[i]-centers$center[i+1])^2)
}
}
phi2_max[i] = dist*hetero_max^2
phi2_list = dist*hetero_list^2
var[i] = sum((data[which(res_cluster==hcluster_ind_order)]- centers$center[i])^2)/centers$n_ind[i]
### loglkratio_constrained_vs_unconstrained
if (var[i]<phi2_max[i]){
loglkratio = loglkratio + 0
}
else{
loglkratio = loglkratio + (centers$n_ind[i]/2 * (log(var[i]) - log(phi2_max[i]))- centers$n_ind[i]/2 *var[i]/phi2_max[i] + centers$n_ind[i]/2)
}
#for (x in 1:length(phi2_list)) {
#  loglk_agg = loglk_agg + 1/length(phi2_list)*(- centers$n_ind[i]/2*log(2*pi*phi2_list[x])-
#                                                 sum((data[which(res_cluster==hcluster_ind_order)]- centers$center[i])^2/(2*phi2_list[x])))
#}
}
res<-c(res,loglkratio)
}
results<-list()
results$lkratio_list = cbind(num_of_cluster = 1:k_max, lkratio=exp(res))
results$k_opt = which(res==max(res,na.rm=TRUE))
#res$res_hclust = res_cluster
#centers["phi"] = phi2_max
#centers["mle_var"] = var
#res$info = centers
#res$loglkratio = loglkratio
#res$loglk = loglk_agg
return(results)
}
hclust_lkratio_opt(data)
?cutree
library(ggplot2)
res<-hclust_lkratio_opt(data)
data.frame(res$lkratio_list)
res<-data.frame(res$lkratio_list)
ggplot(res, aes(x=num_of_cluster,y=lkratio))+geom_line()
?cutree
hc <- hclust(dist(USArrests))
cutree(hc, k = 1:5) #k = 1 is trivial
cutree(hc, h = 250)
## Compare the 2 and 4 grouping:
g24 <- cutree(hc, k = c(2,4))
table(grp2 = g24[,"2"], grp4 = g24[,"4"])
density(data)
hist(data)
hist(data,bins=30)
hist(data,nbin=30)
hist(data,nbin=50)
?hist
hist(data,breaks=30)
hclust_lkratio_opt<-function(data,k_max=10){
#hetero = 0.2725229
hetero_list = c(0.2015669,0.2249782,0.2430164,0.2585681,0.2725229)
hetero_max = hetero_list[length(hetero_list)]
hclust_temp = hclust(dist(data),method="average")
res <- c(NA)
for (k in 2:k_max){
res_cluster = cutree(hclust_temp,k)
centers = sapply(1:k, function(x) mean(data[which(res_cluster==x)]))
centers = cbind(center=centers,hclust_order=1:k)
n_list = sapply(1:k, function(x) length(which(res_cluster==x)))
centers = cbind(centers,n_ind = n_list)
centers = centers[order(centers[,1]),]
centers = cbind(centers,cluster_order=1:k)
centers = data.frame(centers)
colnames(centers)[1] <- c("center")
phi2_max = rep(0,k)
var = rep(0,k)
loglkratio = 0
#loglk_agg = 0
for (i in 1:k){
hcluster_ind_order = centers$hclust_order[i]
if (i==1){
dist = (centers$center[i]-centers$center[i+1])^2
}
else
{if (i==k){
dist = (centers$center[i]-centers$center[i-1])^2
}
else{
dist = min((centers$center[i]-centers$center[i-1])^2,(centers$center[i]-centers$center[i+1])^2)
}
}
phi2_max[i] = dist*hetero_max^2
phi2_list = dist*hetero_list^2
var[i] = sum((data[which(res_cluster==hcluster_ind_order)]- centers$center[i])^2)/centers$n_ind[i]
### loglkratio_constrained_vs_unconstrained
if (var[i]<phi2_max[i]){
loglkratio = loglkratio + 0
}
else{
loglkratio = loglkratio + (centers$n_ind[i]/2 * (log(var[i]) - log(phi2_max[i]))- centers$n_ind[i]/2 *var[i]/phi2_max[i] + centers$n_ind[i]/2)
}
#for (x in 1:length(phi2_list)) {
#  loglk_agg = loglk_agg + 1/length(phi2_list)*(- centers$n_ind[i]/2*log(2*pi*phi2_list[x])-
#                                                 sum((data[which(res_cluster==hcluster_ind_order)]- centers$center[i])^2/(2*phi2_list[x])))
#}
}
res<-c(res,loglkratio)
}
results<-list()
results$hclust_res = hclust_temp
results$lkratio_list = cbind(num_of_cluster = 1:k_max, lkratio=exp(res))
results$k_opt = which(res==max(res,na.rm=TRUE))
#res$res_hclust = res_cluster
#centers["phi"] = phi2_max
#centers["mle_var"] = var
#res$info = centers
#res$loglkratio = loglkratio
#res$loglk = loglk_agg
return(results)
}
res<-hclust_lkratio_opt(data)
res$hclust_res
plot(res$hclust_res)
?hclust
k=c(1,2,3,4,5,6)
k[c(1,2,2,1,1,1),]
k[c(1,2,2,1,1)]
k[c(1,2,2,1,1,1)]
library(INTRIGUR)
library(INTRIGUE)
?hetero
root_vec<-c(0)
for (t_ind in t){
f = function(k){
g = function(x){
(1/(1+exp(0.5*(1/k)^2+x/k)))*dnorm(x)}
return(integrate(g,-Inf,Inf)$value - t_ind)
}
root<-uniroot(f,c(1e-100,1e5),tol = .Machine$double.eps^0.2)$root
root_vec<-c(root_vec,root)
}
t= seq(0.001,0.05,0.001)
root_vec<-c(0)
for (t_ind in t){
f = function(k){
g = function(x){
(1/(1+exp(0.5*(1/k)^2+x/k)))*dnorm(x)}
return(integrate(g,-Inf,Inf)$value - t_ind)
}
root<-uniroot(f,c(1e-100,1e5),tol = .Machine$double.eps^0.2)$root
root_vec<-c(root_vec,root)
}
root_vec
t=seq(0,0.05,0.01)
t=seq(0.01,0.05,0.01)
root_vec<-c(0)
for (t_ind in t){
f = function(k){
g = function(x){
(1/(1+exp(0.5*(1/k)^2+x/k)))*dnorm(x)}
return(integrate(g,-Inf,Inf)$value - t_ind)
}
root<-uniroot(f,c(1e-100,1e5),tol = .Machine$double.eps^0.2)$root
root_vec<-c(root_vec,root)
}
root_vec
t=seq(0.05,0.5,0.05)
t
root_vec<-c()
for (t_ind in t){
f = function(k){
g = function(x){
(1/(1+exp(0.5*(1/k)^2+x/k)))*dnorm(x)}
return(integrate(g,-Inf,Inf)$value - t_ind)
}
root<-uniroot(f,c(1e-100,1e5),tol = .Machine$double.eps^0.2)$root
root_vec<-c(root_vec,root)
}
t=seq(0.05,0.49,0.05)
root_vec<-c()
for (t_ind in t){
f = function(k){
g = function(x){
(1/(1+exp(0.5*(1/k)^2+x/k)))*dnorm(x)}
return(integrate(g,-Inf,Inf)$value - t_ind)
}
root<-uniroot(f,c(1e-100,1e5),tol = .Machine$double.eps^0.2)$root
root_vec<-c(root_vec,root)
}
root_vec
data=data.frame(matrix(c(1,2,5,1,2,5,8,2,5,7,3,2,6),nol=2))
data=data.frame(matrix(c(1,2,5,1,2,5,8,2,5,7,3,2,6),ncol=2))
data=data.frame(matrix(c(1,2,5,1,2,5,8,2,5,7,3,2,6,1),ncol=2))
data
data$sig<-c(rep(1,5),rep(0,2))
data
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)~for~skinhoming~in~CD4))+
ylab(expression(hat(beta)~for~skinhoming~in~CD4))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
library(ggplot2)
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)~for~skinhoming~in~CD4))+
ylab(expression(hat(beta)~for~skinhoming~in~CD4))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)~for~skinhoming~in~CD4))+
ylab(expression(hat(beta)~for~skinhoming~in~CD4))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)~skinhoming~CD4))+
ylab(expression(hat(beta)~skinhoming~CD4))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
data$sig<-as.factor(c(rep(1,5),rep(0,2)))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)~skinhoming~CD4))+
ylab(expression(hat(beta)~skinhoming~CD4))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~CD4))+
ylab(expression(hat(beta)[skinhoming]~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~in~CD4))+
ylab(expression(hat(beta)[skinhoming]~in~CD8))+
xlim(0,1)+ylim(0,1)+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
xlim(0,1)+ylim(0,1)+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90", "gene w/ irreplicable prob. > 0.90"))
ggplot(data=data_dc,aes(x=betacd4,y=betacd8))+
geom_point(aes(color= prob))+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw(legend.position = c(0.8, 0.2))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw(legend.position = c(0.8, 0.2))
ggplot(data=data,aes(x=X1,y=X2))+
geom_point(aes(color= sig))+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme(legend.position = c(0.8, 0.2))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,fill=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_fill_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,fill=sig,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_fill_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,fill=sig,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme(legend.position = c(0.8, 0.2))+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme(legend.position="bottom")+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"),legend.position="bottom")+
theme(legend.position="bottom")+
theme_bw()
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme(legend.position="bottom")+
#theme_bw()
gene w/ replicable prob. > 0.90
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme(legend.position="bottom")
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw(legend.position="bottom")
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))+
theme_bw(legend.position="bottom")
theme_set(theme_bw() + theme(legend.position = 'bottom'))
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))
ggplot(data=data,aes(x=X1,y=X2,color=sig))+
geom_point()+
xlab(expression(hat(beta)[skinhoming]~"in"~CD4))+
ylab(expression(hat(beta)[skinhoming]~"in"~CD8))+
scale_color_discrete(name="",labels=c("gene w/ replicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"))
scale_color_discrete(name="",labels=c("null ","gene w/ irreplicable prob. > 0.90"))
ggplot(data=data_dc,aes(x=zcd4,y=zcd8,color=prob))+
geom_point(size=1)+
xlab(expression(z[skinhoming]~"in"~CD4))+
ylab(expression(z[skinhoming]~"in"~CD8))+
scale_color_manual(name=" ",
breaks=c("gene w/ irreplicable prob. > 0.90",
"gene w/ irreplicable prob. > 0.90"),
values=c('black','blue','red'))
prob
library(INTRIGUE)
setwd("~/Desktop/2022Fall/distinguishability_repo/distinguishability_paper/batch_eff")
prp_d_list=c()
for (bb in c(seq(0,2,0.5),4)){
dd<-read.table(file=paste0("output/batch_2grp_bb_sd_",bb,".prp.out"))
#ddc<-read.table(file=paste0("~/Desktop/rep_new/PRP/PRP_paper/batch_eff/output/batch_2grp_bb_sd_",bb,".prp.out"))
dd = data.frame(dd)
#ddc = data.frame(ddc)
names(dd)<-c("V1", "rep_pval")
#names(ddc)<-c("V1", "rep_pval")
prp_d_list<-c(prp_d_list,length(which(dd$rep_pval<0.05))/nrow(dd))
#prp_dc_list<-c(prp_dc_list,length(which(ddc$rep_pval<0.05))/nrow(ddc))
}
data_plot2<-data.frame(eta=c(seq(0,2,0.5),4), prior_prp_d=prp_d_list)
#data_plot2_long <- melt(data_plot2,id="eta")
#names(data_plot2_long)<-c("eta","criterion","sensitivity")
pdf(file="plots/sensitivity_batch_2grp_d.pdf",height=4.5, width =6.3)
ggplot(data=data_plot2,aes(x=eta,y=prior_prp_d))+
geom_line()+
geom_point()+
theme(legend.text.align = 0)+
theme_bw()+
xlab("batch effect magnitude")+
#scale_color_discrete(labels=c("DC", "Distinguishability"))
#scale_x_continuous(breaks = seq(0, 2, by = 0.5))
dev.off()
library(ggplot2)
ggplot(data=data_plot2,aes(x=eta,y=prior_prp_d))+
geom_line()+
geom_point()+
theme(legend.text.align = 0)+
theme_bw()+
xlab("batch effect magnitude")
#scale_color_discrete(labels=c("DC", "Distinguishability"))
#scale_x_continuous(breaks = seq(0, 2, by = 0.5))
dev.off()
pdf(file="plots/sensitivity_batch_2grp_d.pdf",height=4.5, width =5.5)
ggplot(data=data_plot2,aes(x=eta,y=prior_prp_d))+
geom_line(color=blue)+
geom_point()+
theme(legend.text.align = 0)+
theme_bw()+
xlab("batch effect magnitude")
#scale_color_discrete(labels=c("DC", "Distinguishability"))
#scale_x_continuous(breaks = seq(0, 2, by = 0.5))
dev.off()
pdf(file="plots/sensitivity_batch_2grp_d.pdf",height=4.5, width =4)
ggplot(data=data_plot2,aes(x=eta,y=prior_prp_d))+
geom_line(color="#6186ad",size=0.8)+
geom_point(color="#6186ad")+
theme(legend.text.align = 0)+
theme_bw()+
xlab("batch effect magnitude")+
ylim(0,1)
#scale_color_discrete(labels=c("DC", "Distinguishability"))
#scale_x_continuous(breaks = seq(0, 2, by = 0.5))
dev.off()
pdf(file="plots/sensitivity_batch_2grp_d.pdf",height=4, width =4.5)
ggplot(data=data_plot2,aes(x=eta,y=prior_prp_d))+
geom_line(color="#6186ad",size=0.8)+
geom_point(color="#6186ad")+
theme(legend.text.align = 0)+
theme_bw()+
xlab("batch effect magnitude")+
ylab("sensitivity")+
ylim(0,1)
#scale_color_discrete(labels=c("DC", "Distinguishability"))
#scale_x_continuous(breaks = seq(0, 2, by = 0.5))
dev.off()
setwd("~/Desktop/2022Fall/distinguishability_repo/distinguishability_paper/RNAseq/data")
read.table(file="data_skinhoming.dat",colnames=T)
read.table(file="data_skinhoming.dat",col.names=T)
read.table(file="data_skinhoming.dat",col=T)
read.table(file="data_skinhoming.dat")
tt=read.table(file="data_skinhoming.dat",header=T)
class(tt[,1])
setwd("~/Desktop/2022Fall/distinguishability_repo/distinguishability_paper/RNAseq")
data_skinhoming<-read.table("data/data_skinhoming.dat",header=T)
n=nrow(data_skinhoming)
n
rep_grid<-c(0,0.202,0.225,0.243,0.259,0.273)
irre_grid<-c(0.335,0.396,0.463,0.542,0.643,0.785,1.012,1.505)
est_prop_d_list<-c()
hetero(data_skinhoming,rep=rep_grid,irre=irre_grid)$est_prop
sample_index = sample(n,size=n,replace=TRUE)
sample_index
sample(n,size=n,replace=TRUE)
sample(n,size=n,replace=TRUE)
df<-c(12,3,4,56,78,18,46,78,100)
quantile(df)
9*0.25
9*0.75
7
2
quantile(df,25)
quantile(df,prob=0.25)
quantile(df,prob=0.75)
